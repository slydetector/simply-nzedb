#!/bin/bash
echo "Creating data directory..."
mkdir -p data

# Read in all custom settings as env vars
source etc/simply_nzedb.conf

cp etc/settings.php.example data/settings.php

cp etc/config.php.example data/config.php
target="data/config.php"

# Ripped from http://stackoverflow.com/questions/3466166/how-to-check-if-running-in-cygwin-mac-or-linux
if [ "$(uname)" == "Darwin" ]; then
    sed="sed -i '' -E"
    id_user="id -u"
    id_group="id -g"
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
    sed="sed -i -r"
    id_user="id --user"
    id_group="id --group"
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
    echo "Windows not supported. Submit a pull request :)"
    exit 1
fi

$sed "s/changeme_nntp_username/${NNTP_USERNAME}/g" $target
$sed "s/changeme_nntp_password/${NNTP_PASSWORD}/g" $target
$sed "s/changeme_nntp_server/${NNTP_SERVER}/g" $target
$sed "s/changeme_nntp_port/${NNTP_PORT}/g" $target
$sed "s/changeme_nntp_sslenabled/${NNTP_SSLENABLED}/g" $target

$sed "s/changeme_db_system/${DB_SYSTEM}/g" $target
$sed "s/changeme_db_host/${DB_HOST}/g" $target
$sed "s/changeme_db_port/${DB_PORT}/g" $target
$sed "s/changeme_db_socket/${DB_SOCKET}/g" $target
$sed "s/changeme_db_user/${DB_USER}/g" $target
$sed "s/changeme_db_password/${DB_PASSWORD}/g" $target
$sed "s/changeme_db_name/${DB_NAME}/g" $target

cp etc/nginx.conf.example data/nginx.conf
$sed "s/changeme_server_name/$(hostname)/g" data/nginx.conf

# Will end up mounted to /root/.mytop
cp etc/mytop.example data/mytop
target="data/mytop"
$sed "s/changeme_db_system/${DB_SYSTEM}/g" $target
$sed "s/changeme_db_host/${DB_HOST}/g" $target
$sed "s/changeme_db_port/${DB_PORT}/g" $target
$sed "s/changeme_db_user/${DB_USER}/g" $target
$sed "s/changeme_db_password/${DB_PASSWORD}/g" $target
$sed "s/changeme_db_name/${DB_NAME}/g" $target

mkdir -p data/covers/anime
mkdir -p data/covers/audio
mkdir -p data/covers/audiosample
mkdir -p data/covers/book
mkdir -p data/covers/console
mkdir -p data/covers/movies
mkdir -p data/covers/music
mkdir -p data/covers/preview
mkdir -p data/covers/sample
mkdir -p data/covers/tvshows
mkdir -p data/covers/video
mkdir -p data/nzb
mkdir -p data/tmp/unrar
mkdir -p data/etc_mysql_conf.d
mkdir -p data/var_lib_mysql
mkdir -p data/log
mkdir -p data/import/inbox
mkdir -p data/db_backups

# Create as files otherwise docker will mount as directories 
touch data/log/nginx-access.log
touch data/log/nginx-error.log
touch data/log/php_errors.log
touch data/log/php-fpm.log

# File that lets mysql container know user id/gid on host
cat << EOF > data/mysql_user
PUID=$($id_user)
PGID=$($id_group)
EOF

# Save predb import progress across container start/stop.
# Written by predb_import_daily_batch.php
touch data/predb_progress.txt

# irc scraper 
cp etc/ircscraper_settings_example.php data/ircscraper_settings.php
$sed "s/changeme_irc_username/${IRC_USERNAME}/g" data/ircscraper_settings.php
$sed "s/changeme_irc_server/${IRC_SERVER}/g" data/ircscraper_settings.php
$sed "s/changeme_irc_port/${IRC_PORT}/g" data/ircscraper_settings.php
$sed "s/changeme_irc_tls/false/g" data/ircscraper_settings.php
$sed "s/changeme_irc_password/${IRC_PASSWORD}/g" data/ircscraper_settings.php

# proxychains for socks proxy
cp etc/proxychains.conf.example data/proxychains.conf
$sed "s/changeme_socks_type/${SOCKS_TYPE}/g" data/proxychains.conf
$sed "s/changeme_socks_host/${SOCKS_HOST}/g" data/proxychains.conf
$sed "s/changeme_socks_port/${SOCKS_PORT}/g" data/proxychains.conf

chmod -R 777 data
echo Done
